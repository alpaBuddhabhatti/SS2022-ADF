{
	"name": "CustomerData",
	"properties": {
		"folder": {
			"name": "SentimentAnalysis"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_ABLB_FEEDBACK_IN",
						"type": "DatasetReference"
					},
					"name": "CustomerFeedback"
				},
				{
					"dataset": {
						"referenceName": "DS_ABLB_JSON",
						"type": "DatasetReference"
					},
					"name": "SentimentalAnalysis"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_ABLB_FIANL",
						"type": "DatasetReference"
					},
					"name": "sinkBLOB"
				},
				{
					"dataset": {
						"referenceName": "DS_ASQL_DF",
						"type": "DatasetReference"
					},
					"name": "SinkSQLTable"
				}
			],
			"transformations": [
				{
					"name": "Join"
				},
				{
					"name": "GroupBySentiment"
				}
			],
			"script": "parameters{\n\tSpecCode as string ('feedback'),\n\tRuntime as string ('123456_123456'),\n\tFileName as string ('test.csv')\n}\nsource(output(\n\t\tCustomerID as short,\n\t\tProduct as string,\n\t\tFeedback as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\twildcardPaths:['*.csv']) ~> CustomerFeedback\nsource(output(\n\t\tid as string,\n\t\tsentiment as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'documentPerLine',\n\tpreferredIntegralType: 'integer',\n\twildcardPaths:['*.json']) ~> SentimentalAnalysis\nCustomerFeedback, SentimentalAnalysis join(CustomerID == toInteger(id),\n\tjoinType:'inner',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> Join\nJoin aggregate(groupBy(sentiment),\n\ttotal = count(sentiment)) ~> GroupBySentiment\nGroupBySentiment sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:[(concat($FileName,'_', $Runtime,'.csv'))],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1,\n\tpartitionBy('hash', 1)) ~> sinkBLOB\nJoin sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tCustomerID,\n\t\tProduct,\n\t\tFeedback,\n\t\tsentiment\n\t)) ~> SinkSQLTable"
		}
	}
}